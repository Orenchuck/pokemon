{"version":3,"sources":["PokeModal.js","Pagination.js","App.js","serviceWorker.js","index.js"],"names":["show","onHide","pokemon","Modal","Header","closeButton","Title","name","Body","base_experience","forms","map","form","key","moves","move","Button","variant","weight","height","Footer","onClick","PaginationComponent","page","pageCount","switchPage","perPage","paginationPages","Math","ceil","push","Pagination","Ellipsis","i","Item","active","className","First","Prev","Next","Last","URL_API","App","state","pokemons","isShowModal","currentPokemon","pages","currentPage","limit","countItems","searchName","pokemonTypes","getPokemonData","pokemonData","url","axios","then","res","data","setState","catch","err","console","log","showModal","changePageHandler","a","get","results","forEach","changeLimitHandler","e","target","value","setTimeout","searchHandler","searchSubmit","length","allpokemon","includes","tagsHandle","type","count","this","Row","Col","xl","Form","Label","Control","placeholder","onChange","Group","as","ListGroup","horizontal","lg","md","sm","xs","id","src","alt","style","width","types","PokeModal","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mXAGe,kBAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OACb,kBAACC,EAAA,EAAD,CAAOH,KAAMA,EAAMC,OAAQA,GACzB,kBAACE,EAAA,EAAMC,OAAP,CAAcC,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,KAAcJ,EAAQK,OAE1B,kBAACJ,EAAA,EAAMK,KAAP,KACI,6BAAK,+CAAL,IAA8BN,EAAQO,iBACtC,6BAAK,qCAAL,IAAoBP,EAAQQ,MAAMC,KAAI,SAAAC,GAAI,OAAK,0BAAMC,IAAKD,EAAKL,MAAOK,EAAKL,UAC3E,6BAAK,qCAAL,IAAoBL,EAAQY,MAAMH,KAAI,SAAAI,GAAI,OAAK,kBAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQJ,IAAKE,EAAKA,KAAKR,MAAOQ,EAAKA,KAAKR,UACvG,6BAAK,sCAAL,IAAqBL,EAAQgB,QAC7B,6BAAK,sCAAL,IAAqBhB,EAAQiB,SAEjC,kBAAChB,EAAA,EAAMiB,OAAP,KACE,kBAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAYI,QAASpB,GAArC,S,QCgFSqB,EA7Fa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,UAAoBC,GAAiB,EAA1BC,QAA0B,EAAjBD,YAEvD,GADAF,GAAQ,EACU,IAAdC,EAAiB,OAAO,8BAC5B,IAAMG,EAAkB,GAIxB,GAHIH,EAAY,GAAKD,EAAOK,KAAKC,KAAKL,EAAY,IAChDG,EAAgBG,KAAK,kBAACC,EAAA,EAAWC,SAAZ,OAEnBT,EAAO,EACT,IADa,IAAD,WACHU,GACPN,EAAgBG,KACd,kBAACC,EAAA,EAAWG,KAAZ,CACErB,IAAKoB,EACLZ,QAAS,WACPI,EAAWQ,KAGZA,KAREA,EAAIV,EAAO,EAAGU,EAAIV,IAAQU,EAAI,EAA9BA,GAwDX,OA3CAN,EAAgBG,KACd,kBAACC,EAAA,EAAWG,KAAZ,CACErB,IAAKU,EACLY,QAAM,EACNd,QAAS,WACPI,EAAWF,KAGZ,IACAA,EAAM,MAGPA,EAAO,GAAKC,IACdG,EAAgBG,KACd,kBAACC,EAAA,EAAWG,KAAZ,CACErB,IAAKU,EAAO,EACZF,QAAS,WACPI,EAAWF,EAAO,KAGnBA,EAAO,IAGZI,EAAgBG,KACd,kBAACC,EAAA,EAAWG,KAAZ,CACErB,IAAKU,EAAO,EACZF,QAAS,WACPI,EAAWF,EAAO,KAGnBA,EAAO,KAKZC,EAAY,GACZD,EAAOK,KAAKC,KAAKL,EAAY,IAC7BD,EAAO,GAAKC,GAEZG,EAAgBG,KACd,kBAACC,EAAA,EAAWC,SAAZ,CAAqBnB,IAAI,oCAI3B,kBAACkB,EAAA,EAAD,CAAYK,UAAU,cACpB,kBAACL,EAAA,EAAWM,MAAZ,CACExB,IAAK,EACLQ,QAAS,WACPI,EAAW,MAGf,kBAACM,EAAA,EAAWO,KAAZ,CACEjB,QAAS,WACPI,EAAWF,EAAO,EAAI,EAAIA,EAAO,EAAI,MAGxCI,EACD,kBAACI,EAAA,EAAWQ,KAAZ,CACElB,QAAS,WACPI,EAAWF,EAAO,EAAIC,EAAYA,EAAYD,EAAO,MAGzD,kBAACQ,EAAA,EAAWS,KAAZ,CACE3B,IAAKW,EACLH,QAAS,WACPI,EAAWD,QClFfiB,EAAU,6BA8LDC,E,4MA3LbC,MAAQ,CACNC,SAAU,GACVC,aAAa,EACbC,eAAgB,GAChBC,MAAO,KACPC,YAAa,EACbC,MAAO,GACPC,WAAY,KACZC,WAAY,GACZC,aAAc,M,EAyBlBC,eAAiB,SAAAnD,GAAY,IAEvBoD,EADIV,EAAa,EAAKD,MAAlBC,SAEFW,EAAMrD,EAAQqD,IACpBC,IAAMD,GACHE,MAAK,SAAAC,GACJJ,EAAcI,EAAIC,QAEnBF,MAAK,WACJb,EAASd,KAAKwB,GACd,EAAKM,SAAS,CACdhB,gBAGDiB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG9BG,UAAY,SAAA/D,GAAY,IACd2C,EAAgB,EAAKF,MAArBE,YACR,EAAKe,SAAS,CACZf,aAAcA,EACdC,eAAgB5C,K,EAIpBgE,kB,uCAAoB,WAAM3C,GAAN,eAAA4C,EAAA,sDACVlB,EAAU,EAAKN,MAAfM,MAER,IACEO,IACGY,IADH,UACU3B,EADV,4BACqClB,EAAO0B,EAD5C,kBAC2DA,IACxDQ,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACZZ,YAAazB,EACbqB,SAAU,KAEZc,EAAIC,KAAKU,QAAQC,SAAQ,SAAApE,GACvB,EAAKmD,eAAenD,SAIvB2D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC5B,MAAOA,GACPC,QAAQC,IAAIF,GAlBI,2C,wDAsBpBS,mBAAqB,SAAAC,GAAM,IACjBtB,EAAe,EAAKP,MAApBO,WACFD,EAAQuB,EAAEC,OAAOC,MACvB,EAAKd,SAAS,CACZX,QACAD,YAAa,EACbD,MAAOnB,KAAKC,KAAKqB,EAAaD,KAEjC0B,YAAW,kBAAM,EAAKT,kBAAkB,KAAI,M,EAG7CU,cAAgB,SAAAJ,GACd,EAAKZ,SAAS,CACZT,WAAYqB,EAAEC,OAAOC,S,EAIzBG,aAAe,WAAO,IAAD,EACgB,EAAKlC,MAAhCO,EADW,EACXA,WAAYC,EADD,EACCA,WACM,IAAtBA,EAAW2B,SACb,EAAKlB,SAAS,CACdhB,SAAU,KAGZY,IAAMY,IAAN,UAAa3B,EAAb,kCAA8CS,IAC7CO,MAAK,SAAAsB,GACJA,EAAWpB,KAAKU,QAAQC,SAAQ,SAAAZ,GAC1BA,EAAInD,KAAKyE,SAAS7B,IACpB,EAAKE,eAAeK,SAIzBG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,EAI5BmB,WAAa,SAAAC,GAAS,IACZjC,EAAU,EAAKN,MAAfM,MACR,EAAKW,SAAS,CACZhB,SAAU,KAGZY,IACGY,IADH,UACUc,EAAK3B,MACZE,MAAK,SAAAC,GACJ,IAAK,IAAIzB,EAAI,EAAGA,EAAIgB,EAAOhB,GAAK,EAC9B,EAAKoB,eAAeK,EAAIC,KAAKzD,QAAQ+B,GAAG/B,YAG3C2D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,kEAtHT,IAAD,OAClBN,IAAMY,IAAN,UAAa3B,EAAb,YACCgB,MAAK,SAAAsB,GACJ,EAAKnB,SAAS,CACZb,MAAOnB,KAAKC,KAAKkD,EAAWpB,KAAKwB,MAAQ,IACzCjC,WAAY6B,EAAWpB,KAAKwB,QAG9BJ,EAAWpB,KAAKU,QAAQC,SAAQ,SAAApE,GAC/B,EAAKmD,eAAenD,SAGtB2D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1BN,IAAMY,IAAN,UAAa3B,EAAb,SACCgB,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACZR,aAAcM,EAAIC,KAAKU,e,+BAwGnB,IAAD,SAC6Ee,KAAKzC,MAAjFC,EADD,EACCA,SAAUC,EADX,EACWA,YAAaC,EADxB,EACwBA,eAAgBE,EADxC,EACwCA,YAAaD,EADrD,EACqDA,MAAOK,EAD5D,EAC4DA,aAEnE,OACE,6BACE,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGnD,UAAU,aACpB,kBAACoD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,6BACA,kBAACD,EAAA,EAAKE,QAAN,CAAcR,KAAK,OAAOS,YAAY,aAAaC,SAAU,SAACpB,GAAD,OAAO,EAAKI,cAAcJ,MACvF,6BACA,kBAACxD,EAAA,EAAD,CAAQK,QAAS+D,KAAKP,cAAtB,SAEF,6BACA,kBAACW,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKK,MAAN,KACE,kBAACL,EAAA,EAAKC,MAAN,wBACA,kBAACD,EAAA,EAAKE,QAAN,CAAcI,GAAG,SAASF,SAAU,SAACpB,GAAD,OAAO,EAAKD,mBAAmBC,KACjE,wCACA,4BAAQE,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,UAKR,kBAACqB,EAAA,EAAD,CAAWC,WAAY,MACtB5C,GAAwC,IAAxBA,EAAa0B,OAAe1B,EAAazC,KAAI,SAAAuE,GAAI,OAC9D,kBAACa,EAAA,EAAU7D,KAAX,CAAgBb,QAAS,kBAAM,EAAK4D,WAAWC,KAAQA,EAAK3E,SAC3D,OAGP,kBAAC8E,EAAA,EAAD,CAAKjD,UAAU,eACdQ,GAAgC,IAApBA,EAASkC,OACpBlC,EAASjC,KAAI,SAAAT,GAAO,OAClB,kBAACoF,EAAA,EAAD,CAAKW,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC9B,yBAAKvF,IAAKX,EAAQmG,GAAIhF,QAAS,kBAAM,EAAK4C,UAAU/D,KAClD,4BAAKA,EAAQK,MACb,yBAAK+F,IAAG,wDAAmDpG,EAAQmG,GAA3D,QAAqEE,IAAI,GAAGC,MAAO,CAACC,MAAO,WAClGvG,EAAQwG,MAAM/F,KAAI,SAAAuE,GAAI,OACrB,uBAAGrE,IAAKqE,EAAKA,KAAK3E,MAAO2E,EAAKA,KAAK3E,cAKrC,MAEDsC,EAAc,kBAAC8D,EAAD,CAAW3G,KAAM6C,EAAa5C,OAAQmF,KAAKnB,UAAW/D,QAAS4C,IAAqB,KACnG,kBAAC,EAAD,CAAYvB,KAAMyB,EAAaxB,UAAWuB,EAAOrB,QAAS,GAAID,WAAY2D,KAAKlB,yB,GAtLvE0C,IAAMC,WCGJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhE,MAAK,SAAAiE,GACJA,EAAaC,gBAEd9D,OAAM,SAAA+D,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.7fdfbca0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default ({ show, onHide, pokemon }: Props) => (\r\n  <Modal show={show} onHide={onHide}>\r\n    <Modal.Header closeButton>\r\n        <Modal.Title>{pokemon.name}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n        <div><b>base_experience </b> {pokemon.base_experience}</div>\r\n        <div><b>forms </b> {pokemon.forms.map(form => (<span key={form.name}>{form.name}</span>))}</div>\r\n        <div><b>moves </b> {pokemon.moves.map(move => (<Button variant=\"light\" key={move.move.name}>{move.move.name}</Button>))}</div>\r\n        <div><b>weight </b> {pokemon.weight}</div>\r\n        <div><b>height </b> {pokemon.height}</div>\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={onHide}>\r\n        Ok\r\n      </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  )","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst PaginationComponent = ({ page, pageCount, perPage, switchPage }) => {\r\n  page += 1;\r\n  if (pageCount === 1) return <div />;\r\n  const paginationPages = [];\r\n  if (pageCount > 5 && page > Math.ceil(pageCount / 2)) {\r\n    paginationPages.push(<Pagination.Ellipsis />);\r\n  }\r\n  if (page > 1) {\r\n    for (let i = page - 1; i < page; ++i) {\r\n      paginationPages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          onClick={() => {\r\n            switchPage(i);\r\n          }}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n  }\r\n  paginationPages.push(\r\n    <Pagination.Item\r\n      key={page}\r\n      active\r\n      onClick={() => {\r\n        switchPage(page);\r\n      }}\r\n    >\r\n      {' '}\r\n      {page}{' '}\r\n    </Pagination.Item>\r\n  );\r\n  if (page + 2 <= pageCount) {\r\n    paginationPages.push(\r\n      <Pagination.Item\r\n        key={page + 1}\r\n        onClick={() => {\r\n          switchPage(page + 1);\r\n        }}\r\n      >\r\n        {page + 1}\r\n      </Pagination.Item>\r\n    );\r\n    paginationPages.push(\r\n      <Pagination.Item\r\n        key={page + 2}\r\n        onClick={() => {\r\n          switchPage(page + 2);\r\n        }}\r\n      >\r\n        {page + 2}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  if (\r\n    pageCount > 5 &&\r\n    page < Math.ceil(pageCount / 2) &&\r\n    page + 2 <= pageCount\r\n  ) {\r\n    paginationPages.push(\r\n      <Pagination.Ellipsis key=\"last-order-pagination-ellipsis\" />\r\n    );\r\n  }\r\n  return (\r\n    <Pagination className=\"pagination\">\r\n      <Pagination.First\r\n        key={1}\r\n        onClick={() => {\r\n          switchPage(1);\r\n        }}\r\n      />\r\n      <Pagination.Prev\r\n        onClick={() => {\r\n          switchPage(page - 1 > 1 ? page - 1 : 1);\r\n        }}\r\n      />\r\n      {paginationPages}\r\n      <Pagination.Next\r\n        onClick={() => {\r\n          switchPage(page + 1 > pageCount ? pageCount : page + 1);\r\n        }}\r\n      />\r\n      <Pagination.Last\r\n        key={pageCount}\r\n        onClick={() => {\r\n          switchPage(pageCount);\r\n        }}\r\n      />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React from 'react';\nimport axios from 'axios';\nimport { Col, Form, Button, Row, ListGroup } from 'react-bootstrap';\nimport './App.css';\nimport PokeModal from './PokeModal';\nimport Pagination from './Pagination';\n\nconst URL_API = 'https://pokeapi.co/api/v2/';\n\nclass App extends React.Component {\n  state = {\n    pokemons: [],\n    isShowModal: false,\n    currentPokemon: [],\n    pages: null,\n    currentPage: 0,\n    limit: 20,\n    countItems: null,\n    searchName: '',\n    pokemonTypes: null,\n  }\n\ncomponentDidMount() {\n  axios.get(`${URL_API}pokemon`)\n  .then(allpokemon => {\n    this.setState({\n      pages: Math.ceil(allpokemon.data.count / 20),\n      countItems: allpokemon.data.count,\n    });\n\n    allpokemon.data.results.forEach(pokemon => {\n     this.getPokemonData(pokemon); \n    })\n   })\n  .catch(err => console.log(err));\n\n  axios.get(`${URL_API}type`)\n  .then(res => {\n    this.setState({\n      pokemonTypes: res.data.results,\n    })\n  })\n}\n\ngetPokemonData = pokemon => {\n  const { pokemons } = this.state;\n  let pokemonData;\n  const url = pokemon.url;\n  axios(url)\n    .then(res => {\n      pokemonData = res.data;\n    })\n    .then(() => {\n      pokemons.push(pokemonData);\n      this.setState({\n      pokemons\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nshowModal = pokemon => {\n  const { isShowModal } = this.state;\n  this.setState({\n    isShowModal: !isShowModal,\n    currentPokemon: pokemon,\n  })\n} \n\nchangePageHandler = async page => {\n  const { limit } = this.state;\n  \n  try {\n    axios\n      .get(`${URL_API}pokemon?offset=${--page * limit}&limit=${limit}`)\n      .then(res => {\n        this.setState({\n          currentPage: page,\n          pokemons: [],\n        });\n        res.data.results.forEach(pokemon => {\n          this.getPokemonData(pokemon); \n         })\n     \n      })\n      .catch(err => console.log(err));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nchangeLimitHandler = e => {\n  const { countItems } = this.state;\n  const limit = e.target.value;\n  this.setState({\n    limit,\n    currentPage: 0,\n    pages: Math.ceil(countItems / limit),\n  });\n setTimeout(() => this.changePageHandler(1), 100);\n}\n\nsearchHandler = e => {\n  this.setState({\n    searchName: e.target.value,\n  })\n}\n\nsearchSubmit = () => {\n  const { countItems, searchName } = this.state;\n  if (searchName.length !== 0) {\n    this.setState({\n    pokemons: [],\n  });\n\n  axios.get(`${URL_API}pokemon?offset=0&limit=${countItems}`)\n  .then(allpokemon => {\n    allpokemon.data.results.forEach(res => {\n      if (res.name.includes(searchName)) {\n        this.getPokemonData(res); \n      }\n    });\n   })\n  .catch(err => console.log(err));\n  }\n}\n\ntagsHandle = type => {\n  const { limit } = this.state;\n  this.setState({\n    pokemons: [],\n  });\n\n  axios\n    .get(`${type.url}`)\n    .then(res => {\n      for (let i = 0; i < limit; i += 1) {\n        this.getPokemonData(res.data.pokemon[i].pokemon);\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nrender() {\n  const { pokemons, isShowModal, currentPokemon, currentPage, pages, pokemonTypes } = this.state;\n  \n  return (\n    <div>\n      <Row>\n        <Col xl={6} className=\"headPanel\">\n          <Form>\n            <Form.Label>Find pokemon by name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter name\" onChange={(e) => this.searchHandler(e)} />\n            <br />\n            <Button onClick={this.searchSubmit}>Find</Button>\n          </Form>\n          <br />\n          <Form>\n            <Form.Group>\n              <Form.Label>To show on page</Form.Label>\n              <Form.Control as='select' onChange={(e) => this.changeLimitHandler(e)}>\n                <option>&nbsp;</option>\n                <option value={10}>10</option>\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n        </Col>\n        <ListGroup horizontal={'sm'}>\n        {pokemonTypes && pokemonTypes.length !== 0 ? pokemonTypes.map(type => (\n            <ListGroup.Item onClick={() => this.tagsHandle(type)}>{type.name}</ListGroup.Item>\n        )) : null}\n        </ListGroup>\n      </Row>\n      <Row className=\"pokemonArea\">\n      {pokemons && pokemons.length !== 0 ? \n        pokemons.map(pokemon => (\n          <Col lg={2} md={4} sm={6} xs={12}>\n          <div key={pokemon.id} onClick={() => this.showModal(pokemon)}>\n            <h3>{pokemon.name}</h3>\n            <img src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`} alt=\"\" style={{width: \"100px\"}} />\n            {pokemon.types.map(type => (\n              <p key={type.type.name}>{type.type.name}</p>\n            ))}\n          </div>\n          </Col>\n        ))\n          : null}\n          </Row>\n          {isShowModal ? <PokeModal show={isShowModal} onHide={this.showModal} pokemon={currentPokemon} /> : null}\n          <Pagination page={currentPage} pageCount={pages} perPage={20} switchPage={this.changePageHandler} />\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}